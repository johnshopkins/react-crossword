@function xword-grid-dimensions($cells) {
    @return $cells * ($xword-cell-width + $xword-border-width) + $xword-border-width;
}

@each $xword, $cells in $xword-grid-sizes {
    $size: xword-grid-dimensions($cells);

    .crossword__container--#{$xword} {
        @include mq(tablet) {
            padding-left: $size;

            &.crossword__container--accessible {
                padding-left: 0;
            }
        }

        .crossword__container__game {
            @include mq(tablet) {
                margin-left: 0 - $size;
            }
        }

        // Because the parent is floated, it has no dimensions, so we must
        // define dimensions for the grid. (SVGs use viewBox which require
        // the parent to have dimensions)
        .crossword__container__grid-wrapper {
            width: 100%;
            height: $size;

            @include mq(tablet) {
                width: $size;
            }
        }

        .crossword__controls {
            @include mq(tablet) {
                margin-left: 0 - $size;
                width: $size;
            }
        }

        .crossword__hidden-input-wrapper {
            width: percentage(calc(1 / $cells));
            height: percentage(calc(1 / $cells));
        }
    }
}


.crossword__container {
    clear: both;
    position: relative;
}

.crossword__controls {
    margin-top: $gs-baseline;
    float: left;
    clear: both;
}

// scrollable clues - only on tablets not in accessible view
.crossword__container--react {
    & .crossword__clues {
        height: 100%;
    }

    & .crossword__clues--wrapper {
        clear: both;
        position: relative;
        
        @include mq(tablet) {
            clear: none;
        }
    }

    @include mq(tablet) {
        & .crossword__clues--wrapper {
            overflow-y: scroll;
            -webkit-overflow-scrolling: touch;
        }
    }
}

.crossword__clues__gradient {
    position: absolute;
    bottom: 0;
    width: 100%;
    height: 120px;
    background: linear-gradient(to bottom, rgba(255, 255, 255, 0), #ffffff);
    display: none;

    @include mq(tablet) {
        display: block;

        .hide-gradient & {
            display: none;
        }
    }
}

.crossword__clues {
    width: 100%;
    clear: both;

    @include mq(tablet) {
        clear: none;
        padding-left: $gs-gutter;
        box-sizing: border-box;

        noscript & {
            width: 85%;
        }

        .crossword__container--accessible & {
            display: table;
            table-layout: fixed;
            width: initial;
        }
    }

    @include mq(wide) {
        display: table;
        table-layout: fixed;
        height: auto;
        background: none;
    }
}

.crossword__accessible-row-data-wrapper {
    float: left;
}

.crossword__clues--across {
    @include mq(desktop) {
        display: table-cell;
        padding-right: calc($gs-gutter / 2);
    }
}

.crossword__clues--down {
    @include mq(desktop) {
        display: table-cell;
        padding-left: calc($gs-gutter / 2);
    }
}
